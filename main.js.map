{"version":3,"file":"main.js","mappings":"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","sources":["webpack://dnd/./src/js/board.js","webpack://dnd/./src/js/app.js"],"sourcesContent":["export default class Board {\n    constructor(board) {\n      this.board = board;\n      this.footer = board.querySelector(\".footer\");\n      this.add = board.querySelector(\".add_card\");\n      this.textArea = board.querySelector(\".card_text\");\n      this.board.ondragover = this.drop;\n    }\n  \n    showAddBlock() {\n      this.footer.classList.add(\"fog\");\n      this.add.classList.remove(\"fog\");\n      this.add.addEventListener(\"click\", (e) => {\n        if (e.target.className == \"add_cross\") {\n          this.closeBlock();\n        } else {\n          this.addCard();\n        }\n      });\n    }\n  \n    addCard() {\n      let cardValue = this.textArea.value;\n      if (cardValue != \"\") {\n        this.createCard(this.getId(), cardValue);\n        this.saveCard(cardValue);\n        this.closeBlock();\n        this.textArea.value = \"\";\n      }\n    }\n  \n    createCard(id, cardValue) {\n      const card = document.createElement(\"div\");\n      const cross = document.createElement(\"div\");\n      cross.innerHTML = \"&#10006;\";\n      card.id = id;\n      card.draggable = \"true\";\n      card.classList.add(\"card\");\n      cross.classList.add(\"cross\");\n      cross.classList.add(\"fog\");\n      card.innerText = cardValue;\n      card.append(cross);\n      this.board.append(card);\n    }\n  \n    getId() {\n      let idNums = JSON.parse(localStorage.getItem(this.board.classList[1]));\n      if (idNums == null) {\n        return `1${this.board.classList[1]}`;\n      } else {\n        return (\n          String(\n            Number(String(Object.keys(idNums).slice(-1)).replace(/[^0-9]/g, \"\")) +\n              1\n          ) + String(this.board.classList[1])\n        );\n      }\n    }\n  \n    saveCard(cardValue) {\n      const jsn = JSON.parse(localStorage.getItem(this.board.classList[1]));\n      const id = this.getId();\n      const newValue = {};\n      newValue[id] = cardValue;\n      if (jsn == null) {\n        localStorage.setItem(this.board.classList[1], JSON.stringify(newValue));\n      } else {\n        let local = JSON.parse(localStorage.getItem(this.board.classList[1]));\n        local[id] = cardValue;\n        localStorage.setItem(this.board.classList[1], JSON.stringify(local));\n      }\n    }\n  \n    delCard(element) {\n      const id = element.id;\n      const local = JSON.parse(localStorage.getItem(this.board.classList[1]));\n      delete local[id];\n      localStorage.setItem(this.board.classList[1], JSON.stringify(local));\n      element.remove();\n    }\n  \n    closeBlock() {\n      this.textArea.value = \"\";\n      this.footer.classList.remove(\"fog\");\n      this.add.classList.add(\"fog\");\n    }\n  \n    saveState() {\n      localStorage.removeItem(this.board.classList[1]);\n      for (let card of this.board.children) {\n        if (card.className == \"card\") {\n          this.saveCard(card.innerText.replace(/[^a-zа-яё0-9\\s]/gi, \"\"));\n        }\n      }\n    }\n  }\n  ","import Board from \"./board.js\";\n\nclass Trello {\n  constructor() {\n    this.card = undefined;\n    this.cardParent = undefined;\n    this.columns = document.querySelector(\".column\");\n    this.cards = document.querySelectorAll(\".card\");\n    this.table = {\n      todo: new Board(document.querySelector(\".todo\")),\n      inprogress: new Board(document.querySelector(\".inprogress\")),\n      done: new Board(document.querySelector(\".done\")),\n    };\n  }\n\n  drag() {\n    const main = document.querySelector(\".table\");\n    let elemBelow = \"\";\n    let lastCard = \"\";\n    let dragCardSize = \"\";\n    let dragCard = \"\";\n\n    main.addEventListener(\"dragenter\", (e) => {\n      if (e.target.classList.contains(\"column\")) {\n        e.target.classList.add(\"drop\");\n      }\n    });\n\n    main.addEventListener(\"dragleave\", (e) => {\n      if (e.target.classList.contains(\"drop\")) {\n        e.target.classList.remove(\"drop\");\n      }\n    });\n\n    main.addEventListener(\"dragstart\", (e) => {\n      if (e.target.classList.contains(\"card\")) {\n        e.dataTransfer.setData(\"text/plain\", e.target.id);\n        dragCardSize = e.target.offsetHeight;\n        dragCard = e.target;\n        setTimeout(() => {\n          dragCard.classList.add(\"fog\");\n        }, 0);\n      }\n    });\n\n    main.addEventListener(\"dragover\", (e) => {\n      e.preventDefault();\n      elemBelow = e.target;\n      if (elemBelow.classList.contains(\"card\")) {\n        if (elemBelow.id != lastCard.id && lastCard != \"\") {\n          lastCard.style.marginTop = \"20px\";\n        }\n        lastCard = e.target;\n        elemBelow.style.marginTop = `${dragCardSize + 10}px`;\n      }\n    });\n\n    main.addEventListener(\"drop\", (e) => {\n      dragCard.classList.remove(\"fog\");\n      const card = main.querySelector(\n        `[id=\"${e.dataTransfer.getData(\"text/plain\")}\"]`\n      );\n      if (elemBelow === card) {\n        return;\n      }\n      if (elemBelow.classList.contains(\"card\")) {\n        const center =\n          elemBelow.getBoundingClientRect().y +\n          elemBelow.getBoundingClientRect().height / 2;\n        if (e.clientY > center) {\n          if (elemBelow.nextElementSibling !== null) {\n            elemBelow = elemBelow.nextElementSibling;\n          } else {\n            return;\n          }\n        }\n        elemBelow.parentElement.insertBefore(card, elemBelow);\n      }\n      if (e.target.classList.contains(\"column\")) {\n        if (\n          lastCard &&\n          elemBelow.classList[1] == lastCard.parentElement.classList[1]\n        ) {\n          lastCard.parentElement.insertBefore(card, lastCard);\n          card.style.marginTop = \"20px\";\n          lastCard.style.marginTop = \"20px\";\n          this.saveState();\n          this.cleanState();\n          return;\n        }\n        e.target.append(card);\n      }\n      this.saveState();\n      this.cleanState();\n    });\n  }\n\n  listener() {\n    this.drag();\n    document.addEventListener(\"click\", (e) => {\n      if (e.target.className == \"footer\") {\n        this.table[e.target.parentElement.classList[1]].showAddBlock();\n      }\n      if (e.target.className == \"cross\") {\n        const parent = e.target.parentElement.parentElement.classList[1];\n        this.table[parent].delCard(e.target.parentElement);\n      }\n    });\n    document.addEventListener(\"mouseover\", (e) => {\n      if (e.target.classList[0] == \"card\") {\n        let cross = e.target.querySelector(\".cross\");\n        cross.classList.remove(\"fog\");\n        cross = \"\";\n      }\n    });\n    document.addEventListener(\"mouseout\", (e) => {\n      if (e.target.classList[0] == \"card\") {\n        let cross = e.target.querySelector(\".cross\");\n        setTimeout(() => {\n          cross.classList.add(\"fog\");\n          cross = \"\";\n        }, 1200);\n      }\n    });\n  }\n\n  localStateRead() {\n    if (localStorage.length == 0) {\n      return;\n    } else {\n      for (let key in localStorage) {\n        if (localStorage.getItem(key) != null) {\n          this.restoreState(key, localStorage.getItem(key));\n        }\n      }\n    }\n  }\n\n  restoreState(key, value) {\n    const values = JSON.parse(value);\n    for (let jkey in values) {\n      this.table[key].createCard(jkey, values[jkey]);\n    }\n  }\n\n  cleanState() {\n    const allCards = document.querySelectorAll(\".card\");\n    for (let card of allCards) {\n      card.remove();\n    }\n    this.localStateRead();\n  }\n\n  saveState() {\n    for (let column of Object.keys(this.table)) {\n      this.table[column].saveState();\n    }\n  }\n}\n\nconst listener = new Trello();\n\nlistener.localStateRead();\nlistener.listener();\n"],"names":["Board","constructor","board","this","footer","querySelector","add","textArea","ondragover","drop","showAddBlock","classList","remove","addEventListener","e","target","className","closeBlock","addCard","cardValue","value","createCard","getId","saveCard","id","card","document","createElement","cross","innerHTML","draggable","innerText","append","idNums","JSON","parse","localStorage","getItem","String","Number","Object","keys","slice","replace","jsn","newValue","setItem","stringify","local","delCard","element","saveState","removeItem","children","listener","undefined","cardParent","columns","cards","querySelectorAll","table","todo","inprogress","done","drag","main","elemBelow","lastCard","dragCardSize","dragCard","contains","dataTransfer","setData","offsetHeight","setTimeout","preventDefault","style","marginTop","getData","center","getBoundingClientRect","y","height","clientY","nextElementSibling","parentElement","insertBefore","cleanState","parent","localStateRead","length","key","restoreState","values","jkey","allCards","column"],"sourceRoot":""}